<?php
$con = mysqli_connect('DB_HOST', 'DB_USERNAME', 'DB_PASSWORD');
if (!$con) {
    exit('データベースに接続できませんでした。');
}

$result = mysqli_select_db($con, 'DB_DATABASE');
if (!$result) {
    exit('データベースを選択できませんでした。');
}

$result = mysqli_query($con, 'SET NAMES utf8');
if (!$result) {
    exit('文字コードを指定できませんでした。');
}

$Root = [[],[40.59906,140.481401],[40.599351,140.481927],[40.599642,140.482453],[40.599934,140.482978],[40.599686,140.483443],[40.599438,140.483908],[40.599151,140.484028],[40.598863,140.484149],[40.598924,140.484471],[40.598527,140.484642],[40.59842,140.484237],[40.598201,140.483938],[40.597982,140.483639],[40.597763,140.48334],[40.597543,140.483042],[40.597295,140.482738],[40.5970725,140.4823995],[40.596794,140.482069],[40.59654,140.481704],[40.596328,140.481414],[40.596116,140.481124],[40.595905,140.480834],[40.595745,140.480564],[40.595608,140.480244],[40.595527,140.479883],[40.595446,140.479522],[40.595365,140.479161],[40.595284,140.4788],[40.595204,140.47844],[40.595461,140.478172],[40.595747,140.477962],[40.596028,140.477644],[40.596346,140.477398],[40.596692,140.47708],[40.597046,140.476776],[40.597333,140.476543],[40.597632,140.476275],[40.597931,140.476007],[40.59823,140.47574],[40.5986055,140.475422],[40.598923,140.47514],[40.59924,140.474858],[40.599557,140.474576],[40.599873,140.474295],[40.600257,140.473961],[40.60055,140.4737],[40.600843,140.473439],[40.601136,140.473178],[40.601401,140.472923],[40.601666,140.472668],[40.601931,140.472413],[40.602195,140.472157],[40.602623,140.471741],[40.602841,140.471452],[40.603017,140.471039],[40.603114,140.47065],[40.603218,140.4701],[40.603321,140.469551],[40.602956,140.469462],[40.602591,140.469372],[40.602226,140.469283],[40.60186,140.469193],[40.601442,140.469097],[40.601024,140.469001],[40.600712,140.468919],[40.600399,140.468836],[40.600482,140.468362],[40.600565,140.467888],[40.600649,140.467414],[40.600732,140.46694],[40.600815,140.466465],[40.600489,140.466356],[40.600163,140.466247],[40.599838,140.466137],[40.599915,140.465696],[40.600258,140.46564],[40.600589,140.465734],[40.600919,140.465827],[40.600992,140.465405],[40.601065,140.464983],[40.601137,140.464561],[40.60121,140.46414],[40.601516,140.464223],[40.601822,140.464306],[40.602128,140.464389],[40.602434,140.464472],[40.602739,140.464553],[40.603029,140.464646],[40.603319,140.464739],[40.60361,140.464832],[40.603552,140.465215],[40.603494,140.465598],[40.603436,140.465981],[40.603364,140.466456],[40.603292,140.466931],[40.60322,140.467407],[40.603579,140.467497],[40.603938,140.467587],[40.604296,140.467677],[40.604656,140.46776],[40.605016,140.467843],[40.605376,140.467927],[40.605735,140.468014],[40.606094,140.468101],[40.606454,140.468187],[40.606813,140.468274],[40.607172,140.468361],[40.607532,140.468447],[40.60749,140.468907],[40.607447,140.469367],[40.60738,140.469862],[40.607189,140.470143],[40.606997,140.470423],[40.606645,140.470342],[40.606293,140.470261],[40.605942,140.470181],[40.60559,140.470101],[40.605238,140.470021],[40.604887,140.46994],[40.604823,140.470346],[40.604759,140.470752],[40.604695,140.471158],[40.604630,140.471565],[40.604525,140.472053],[40.604403,140.472405],[40.604204,140.472791],[40.604031,140.473073],[40.603756,140.473423],[40.603436,140.473743],[40.603115,140.474063],[40.602899,140.474408],[40.602727,140.474737],[40.602555,140.475065],[40.602398,140.475365],[40.602241,140.475665],[40.602068,140.475968],[40.601895,140.476271],[40.601722,140.476574],[40.601548,140.476875],[40.601364,140.477166],[40.601139,140.477472],[40.600972,140.477747],[40.600805,140.478022],[40.600637,140.478296],[40.600546,140.478642],[40.600454,140.478989],[40.600387,140.479365],[40.600309,140.479758],[40.600264,140.480101],[40.600219,140.480444],[40.599842,140.480352],[40.599465,140.480261],[40.59913,140.480188],[40.598707,140.480185],[40.598312,140.480305],[40.598023,140.480492],[40.597811,140.480665],[40.597599,140.480838],[40.597387,140.481011],[40.597175,140.481184],[40.596963,140.481357],[40.596751,140.48153]];
$standby = [[],[40.599289,140.480835],[40.599273,140.480965],[40.599257,140.481095],[40.599195,140.480815],[40.599179,140.480945],[40.599163,140.481075],[40.599147,140.481205]];
$bus_stop = [0,2,10,17,23,31,33,36,40,45,48,52,64,75,87,93,110,123,127,133,152,163];
$plus_time = [0,0,19,19,19,19,19,19,19,19,14,14,14,14,14,14,14,10,10,10,10,10,10,10,10,10,10,10,10,10,10,18,18,12,12,12,19,19,19,19,10,10,10,10,10,13,13,13,8,8,8,8,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,13,13,13,13,13,13,13,13,15,15,15,15,15,15,15,15,15,15,15,15,20,20,20,20,20,20,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,14,14,14,14,14,14,14,14,14,14,14,14,14,10,10,10,10,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,14,14,14,14,14,14];
$now_time = strtotime(date("Y-m-d H:i:s"));

for ($i=1; $i<=7; $i++) {
    $row = mysqli_fetch_array(mysqli_query($con, "SELECT * FROM bus".$_GET["database"]." WHERE bus_id = 'phone".$i."' AND sdate < '".$now_time."' ORDER BY sdate DESC LIMIT 0,1"));
    $original[0] = [(float)$row["lat"],(float)$row["lng"]];
    $td[0] = $now_time - strtotime($row["sdate"]);
    $old_num = (float)$_GET["num".$i];

    if (($td[0] > 60) || (euclid([40.601352,140.474406],$original[0]) > 0.015)) {
        determine($standby[$i],0);
    }
    elseif ($old_num == 0) {

        $res = mysqli_query($con, "SELECT * FROM bus".$_GET["database"]." WHERE bus_id = 'phone".$i."' AND sdate < '".$now_time."' ORDER BY sdate DESC LIMIT 1,6");
        $row_num = 1;
        while ($row = mysqli_fetch_assoc($res)) {
            $original[$row_num] = [(float)$row["lat"],(float)$row["lng"]];
            $td[$row_num] = $now_time - (5 * $row_num) - strtotime($row["sdate"]);
            if($td[$row_num] < 60 && euclid([40.601352,140.474406],$original[$row_num]) < 0.015){$row_num += 1;}
            else{break;}
        }
        if (count($original) != 7) {determine($standby[$i],0);}
        else {
            for ($j=0; $j<=6; $j++) {
                $num_list[] = compare($original[$j]);
            }
            $research = array_count_values($num_list);
            $Num1 = array_keys($research, max($research))[0];
            unset($research[$Num1]);
            if ($research) {$Num2 = array_keys($research, max($research))[0];}
            else {$Num2 = $Num1;}

            if ($Num1 == 1 && $Num2 == 1) {determine($standby[$i],1000);}
            elseif (abs($Num1-$Num2) > 7) {determine($standby[$i],0);}
            else {determine($Root[$Num1],$Num1);}
        }

    }
    else {

        $Num = compare($original[0]);
        if ($old_num == 1 || $old_num == 1101) {determine($standby[$i],1000);}
        elseif ($old_num == 1000) {
            if ($Num > 2 && $Num < 6) {determine($Root[2],$Num);}
            else {determine($standby[$i],1000);}
        }
        elseif ($old_num > count($Root)-10 && $Num < 20 && $Num > 2) {determine($Root[$Num],$Num+1100);}
        elseif ($old_num > count($Root)-20 && $Num <= 2) {determine($Root[$old_num],$old_num);}
        elseif ($old_num > 1100) {
            if (abs($Num-$old_num-1100) > count($Root)-25) {determine($Root[$old_num-1100],$old_num);}
            elseif (abs($Num-$old_num-1100) > 20) {determine($standby[$i],0);}
            elseif ($Num-$old_num-1100 > 3) {determine($Root[$old_num-1097],$old_num+3);}
            elseif ($Num-$old_num-1100 < -3) {determine($Root[$old_num-1103],$old_num-3);}
            else {determine($Root[$Num],$Num+1100);}
        }
        else {
            if (abs($Num-$old_num) > count($Root)-25) {determine($Root[$old_num],$old_num);}
            elseif (abs($Num-$old_num) > 20) {determine($standby[$i],0);}
            elseif ($Num-$old_num > 3) {determine($Root[$old_num+3],$old_num+3);}
            elseif ($Num-$old_num < -3) {determine($Root[$old_num-3],$old_num-3);}
            else {determine($Root[$Num],$Num);}
        }

    }

    $response[$i] = [$new_num, $new_point];
}

$response[8][1] = 0;
for ($i=2; $i<=21; $i++) {
    $difference = 1000;
    for ($j=1; $j<=7; $j++) {
        if (($bus_stop[$i] > $response[$j][0]) && ($bus_stop[$i]-$response[$j][0] < $difference)) {
            $difference = $bus_stop[$i]-$response[$j][0];
        }
    }
    if ($difference < $bus_stop[$i]) {
        $response[8][$i] = array_sum(array_slice($plus_time,$bus_stop[$i]-$difference,$difference));
    }
    else {
        $response[8][$i] = array_sum(array_slice($plus_time,2,$bus_stop[$i]-2));
    }
}

function euclid($begin,$end) {
    return sqrt(($end[1] - $begin[1])**2 + ($end[0] - $begin[0])**2);
}

function compare($point) {
    global $Root;
    $value = INF;
    $num = 0;
    for ($j=1; $j<count($Root); $j++) {
        $d = euclid($point,$Root[$j]);
        if ($d < $value) {
            $value = $d;
            $num = $j;
        }
    }
    return $num;
}

function determine($decided_point,$decided_num) {
    global $new_point, $new_num;
    $new_point = $decided_point;
    $new_num = $decided_num;
}

$con = mysqli_close($con);
if (!$con) {
    exit('データベースとの接続を閉じられませんでした。');
}

header("Content-Type: application/json; charset=UTF-8");
echo json_encode($response);
exit;
?>
